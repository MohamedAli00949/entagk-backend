{"version":3,"file":"static/js/325.0be7f258.chunk.js","mappings":"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","sources":["components/Tasks/TaskForm/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewTask, modifyTask } from \"../../../actions/tasks\";\r\nimport Message from \"../../../utils/Message\";\r\nimport Loading from \"../../../utils/Loading\";\r\n\r\nconst initialData = {\r\n  name: \"\",\r\n  est: 1,\r\n  notes: \"\",\r\n  project: \"\"\r\n}\r\n\r\nconst TaskForm = ({ oldData, setOpen, isLoading, setIsLoading }) => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(oldData === null ? initialData : oldData);\r\n  const [openNotes, setOpenNotes] = useState(data.notes === \"\" ? false : true);\r\n  const [openProject, setOpenProject] = useState(data.project === \"\" ? false : true);\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState({ type: \"\", message: \"\" });\r\n  const { activites, active } = useSelector(state => state.timer);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'est' || e.target.name === 'act') {\r\n      setData({ ...data, [e.target.name]: Number(e.target.value) });\r\n    } else {\r\n      setData({ ...data, [e.target.name]: e.target.value });\r\n    }\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n\r\n    setOpen(ot => !ot);\r\n    if (!data.name || !data.est) {\r\n      setMessage(\"Error at name or est\");\r\n    }\r\n\r\n    if (!oldData) {\r\n      dispatch(addNewTask(data, setIsLoading, setMessage));\r\n    } else {\r\n      dispatch(modifyTask(data, data._id, setIsLoading, setMessage));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {message.message && (\r\n        <Message\r\n          message={message.message}\r\n          type={message.type}\r\n          setMessage={setMessage}\r\n        />\r\n      )}\r\n      {isLoading === data?._id && (\r\n        <div className=\"loading-container\" style={{\r\n          position: 'fixed',\r\n          top: '0',\r\n          right: '0',\r\n          background: '#ffffff73',\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: '1000',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n          <Loading\r\n            size=\"100\"\r\n            strokeWidth=\"5\"\r\n            color={activites[active].color}\r\n            backgroud=\"transperent\"\r\n          />\r\n        </div>\r\n      )}\r\n      <form className=\"task-form\" data-aos=\"zoom-in\" style={{ margin: oldData !== null && \"20px 0 20px\" }} onSubmit={handleSave}>\r\n        <div className=\"form-container\">\r\n          <div className=\"form-inner-container\">\r\n            <div className=\"block\" style={{ position: \"relative\" }}>\r\n              <input\r\n                autoFocus\r\n                className={`${!data.name && 'error'} name`}\r\n                maxLength=\"50\"\r\n                required\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={data.name}\r\n                placeholder=\"What are you working on?\"\r\n                onChange={handleChange}\r\n              />\r\n              <div className=\"text-counter\" style={{ color: `${50 - data.name.length > 10 ? \"#4caf50\" : \"#ff002f\"}` }}>\r\n                <p\r\n                  style={{ fontSize: \"16px\", fontWeight: \"500\", marginBottom: \"15px\" }}\r\n                >{50 - data.name.length}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"block\">\r\n              <p>\r\n                {data.act >= 0 && <>act / </>}\r\n                est pomodoros\r\n              </p>\r\n              <div className=\"pomodoros\">\r\n                {data.act >= 0 && (\r\n                  <div className=\"input-number\">\r\n                    <input\r\n                      name=\"act\"\r\n                      className=\"act\"\r\n                      type=\"number\"\r\n                      min='0'\r\n                      max=\"1000\"\r\n                      defaultValue={data.act}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {data.act >= 0 && (<>/</>)}\r\n                <div className=\"input-number\">\r\n                  <input\r\n                    name=\"est\"\r\n                    required\r\n                    className={`${!data.est && 'error'}`}\r\n                    type=\"number\"\r\n                    min='1'\r\n                    max=\"1000\"\r\n                    defaultValue={data.est}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"block\">\r\n              {openNotes && (\r\n                <div className=\"notes\">\r\n                  <textarea name=\"notes\" type='text' maxLength=\"500\" onChange={handleChange} value={data.notes}></textarea>\r\n                  <div className=\"text-counter\" style={{ color: `${500 - data.notes.length > 100 ? \"#4caf50\" : \"#ff002f\"}` }}>\r\n                    <p style={{ fontSize: \"16px\", fontWeight: \"500\" }}>{500 - data.notes.length}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {(openProject) && (\r\n                <div className=\"project\">\r\n                  <input name=\"project\" type=\"text\" onChange={handleChange} value={data.project} />\r\n                </div>\r\n              )}\r\n              <div className=\"add-buttons\">\r\n                {!openNotes && (\r\n                  <button\r\n                    aria-label=\"add notes button\"\r\n                    type=\"button\"\r\n                    onClick={() => setOpenNotes(on => !on)}\r\n                  >+ add notes</button>\r\n                )}\r\n                {(!openProject) && (\r\n                  <button\r\n                    aria-label=\"add project button\"\r\n                    type=\"button\"\r\n                    onClick={() => setOpenProject(on => !on)}\r\n                  >+ add project</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"task-footer\">\r\n          <button\r\n            aria-label=\"cancel form button\"\r\n            type=\"button\"\r\n            onClick={() => setOpen(o => !o)}\r\n          >cancel</button>\r\n          <div>\r\n            <button\r\n              aria-label=\"submit form button\"\r\n              type=\"submit\"\r\n              className=\"save\"\r\n              disabled={!data.name || !data.est}\r\n            >save</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskForm;"],"names":["initialData","name","est","notes","project","oldData","setOpen","isLoading","setIsLoading","dispatch","useDispatch","useState","data","setData","openNotes","setOpenNotes","openProject","setOpenProject","type","message","setMessage","useSelector","state","timer","activites","active","handleChange","e","target","Number","value","_id","className","style","position","top","right","background","width","height","zIndex","display","alignItems","justifyContent","size","strokeWidth","color","backgroud","margin","onSubmit","preventDefault","ot","modifyTask","addNewTask","autoFocus","maxLength","required","placeholder","onChange","length","fontSize","fontWeight","marginBottom","act","min","max","defaultValue","onClick","on","o","disabled"],"sourceRoot":""}