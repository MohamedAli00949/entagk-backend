{"version":3,"file":"static/js/415.06313f83.chunk.js","mappings":"gOAQMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAChBC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACdE,GAAOF,EAAAA,EAAAA,OAAK,kBAAM,gFAAN,IACZG,GAAOH,EAAAA,EAAAA,OAAK,kBAAM,uEAAN,IAqDlB,EAnDc,WACZ,OAA4CI,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAV,IAA3BA,MACR,GAAgDC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAAzDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,QAEpC,OACE,+BACE,SAAC,EAAAC,SAAD,CAAUC,UACR,SAACC,EAAA,EAAD,CAASC,UAAU,cAAcC,MAAM,MAAMC,OAAO,MAAMC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,YAAY,IAAIC,MAAOb,EAAUD,GAAQc,QAD5H,UAGE,iBAAKC,UAAU,QAAQC,MAAO,CAACC,QAAUf,EAAQgB,WAAaf,GAAY,QAA1E,WACE,iBAAKY,UAAU,SAAf,WACE,mCAGA,SAACxB,EAAD,QAEF,iBAAKwB,UAAU,kBAAf,WACQ,OAALnB,QAAK,IAALA,OAAA,EAAAA,EAAOuB,QAAS,IACf,gBAAKJ,UAAU,aAAf,gBACGnB,QADH,IACGA,OADH,EACGA,EAAOwB,KAAI,SAACC,EAAMC,GAAP,OACV,SAAC,EAAAlB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAACb,GAAD,UAAwB6B,GAAbA,EAAKE,KAD8BF,EAAKE,GAD3C,MAOd7B,GAQA,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAACjB,EAAD,CAAUoC,QAAS7B,EAAmB8B,QAAS,UARjD,oBAAQ,aAAW,kBAAkBV,UAAU,kBAAkBW,QAAS,kBAAM/B,GAAkB,SAAAgC,GAAC,OAAKA,CAAL,GAAzB,EAA1E,WACE,SAAC,MAAD,CAAeC,KAAK,UACpB,cAAGZ,MAAO,CAAEa,WAAY,IAAxB,6BAUA,OAALjC,QAAK,IAALA,OAAA,EAAAA,EAAOuB,QAAS,IACf,gBAAKJ,UAAU,mBAAf,UACE,SAACzB,EAAD,YAOb,C","sources":["components/Tasks/Tasks.js"],"sourcesContent":["import React, { lazy, Suspense, useState } from \"react\";\r\n\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"../../utils/Loading\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TaskForm = lazy(() => import(\"./TaskForm/TaskForm\"));\r\nconst Footer = lazy(() => import(\"./TaskFooter/TaskFooter\"));\r\nconst Menu = lazy(() => import(\"./TasksMenu/TasksMenu\"));\r\nconst Task = lazy(() => import(\"./Task/Task\"));\r\n\r\nconst Tasks = () => {\r\n  const [openFormForNew, setOpenFormForNew] = useState(false);\r\n  const { tasks } = useSelector(state => state.tasks);\r\n  const { active, activites, setting, started } = useSelector(state => state.timer);\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={\r\n        <Loading backgroud=\"transparent\" width=\"100\" height=\"100\" cx=\"25\" cy=\"25\" r=\"20\" strokeWidth=\"1\" color={activites[active].color} />\r\n      }>\r\n        <div className=\"tasks\" style={{display: (setting.focusMode && started) && \"none\" }}>\r\n          <div className=\"header\">\r\n            <h2>\r\n              Tasks\r\n            </h2>\r\n            <Menu />\r\n          </div>\r\n          <div className=\"tasks-container\">\r\n            {tasks?.length > 0 && (\r\n              <div className=\"tasks-list\">\r\n                {tasks?.map((task, index) => (\r\n                  <Suspense fallback={<div>loading...</div>} key={task.id}>\r\n                    <Task key={task.id} {...task} />\r\n                  </Suspense>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {!openFormForNew ? (\r\n              <button aria-label=\"add task button\" className=\"add-task-button\" onClick={() => setOpenFormForNew(p => !p)}>\r\n                <AiOutlinePlus size=\"25px\" />\r\n                <p style={{ marginLeft: 10 }}>\r\n                  add task\r\n                </p>\r\n              </button>\r\n            ) : (\r\n              <Suspense fallback={<div>loading...</div>}>\r\n                <TaskForm setOpen={setOpenFormForNew} oldData={null} />\r\n              </Suspense>\r\n            )}\r\n          </div>\r\n          {tasks?.length > 0 && (\r\n            <div className=\"footer-container\">\r\n              <Footer />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Suspense>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Tasks;"],"names":["TaskForm","lazy","Footer","Menu","Task","useState","openFormForNew","setOpenFormForNew","tasks","useSelector","state","timer","active","activites","setting","started","Suspense","fallback","Loading","backgroud","width","height","cx","cy","r","strokeWidth","color","className","style","display","focusMode","length","map","task","index","id","setOpen","oldData","onClick","p","size","marginLeft"],"sourceRoot":""}