{"version":3,"file":"static/js/415.634564ca.chunk.js","mappings":"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","sources":["components/Tasks/Tasks.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\n\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTasks } from \"../../actions/tasks\";\r\nimport Loading from \"../../utils/Loading\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TaskForm = lazy(() => import(\"./TaskForm/TaskForm\"));\r\nconst Footer = lazy(() => import(\"./TaskFooter/TaskFooter\"));\r\nconst Menu = lazy(() => import(\"./TasksMenu/TasksMenu\"));\r\nconst Task = lazy(() => import(\"./Task/Task\"));\r\n\r\nconst Tasks = ({ setMessage }) => {\r\n  const [openFormForNew, setOpenFormForNew] = useState(false);\r\n  const tasks = useSelector(state => state.tasks);\r\n  const { active, activites, setting, started } = useSelector(state => state.timer);\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (tasks.tasks === undefined) {\r\n      dispatch(getTasks(setMessage));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [tasks.tasks]);\r\n\r\n  if (tasks.tasks === undefined) {\r\n    return (\r\n      <Loading\r\n        size=\"200\"\r\n        strokeWidth=\"1\"\r\n        backgroud=\"white\"\r\n        color={activites[active].color}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={\r\n        <Loading\r\n          size=\"200\"\r\n          strokeWidth=\"5\"\r\n          color=\"white\"\r\n          backgroud=\"transparent\"\r\n        />\r\n      }>\r\n        <div className=\"tasks\" style={{ display: (setting?.focusMode && started) && \"none\" }}>\r\n          <div className=\"header\">\r\n            <h2>\r\n              Tasks\r\n            </h2>\r\n            <Menu />\r\n          </div>\r\n          <div className=\"tasks-container\">\r\n            <>\r\n              {(tasks.isLoading && tasks.tasks.length > 0) && (\r\n                <div className=\"loading-container\">\r\n                  <Loading size=\"50\" strokeWidth=\"3\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                </div>\r\n              )}\r\n            </>\r\n            {tasks.tasks?.length > 0 && (\r\n              <div className=\"tasks-list\">\r\n                {isLoading === 'new' ? (\r\n                  <>\r\n                    {tasks.tasks?.filter(t => !t.check)?.map((task, index) => (\r\n                      <Suspense fallback={\r\n                        <div className=\"loading-container\">\r\n                          <Loading size=\"50\" strokeWidth=\"3\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                        </div>\r\n                      } key={task._id}>\r\n                        <Task key={task._id} isLoading={isLoading} setIsLoading={setIsLoading} setMessage={setMessage} {...task} />\r\n                      </Suspense>\r\n                    ))}\r\n                    {\r\n                      <div className=\"loading-container\">\r\n                        <Loading size=\"50\" strokeWidth=\"3\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                      </div>\r\n                    }\r\n                    {tasks.tasks?.filter(t => t.check)?.map((task, index) => (\r\n                      <Suspense fallback={\r\n                        <div className=\"loading-container\">\r\n                          <Loading size=\"50\" strokeWidth=\"3\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                        </div>\r\n                      } key={task._id}>\r\n                        <Task key={task._id} isLoading={isLoading} setIsLoading={setIsLoading} setMessage={setMessage} {...task} />\r\n                      </Suspense>\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {tasks.tasks?.map((task, index) => (\r\n                      <Suspense fallback={\r\n                        <div className=\"loading-container\">\r\n                          <Loading size=\"50\" strokeWidth=\"3\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                        </div>\r\n                      } key={task?._id}>\r\n                        <Task key={task?._id} isLoading={isLoading} setIsLoading={setIsLoading} setMessage={setMessage} {...task} />\r\n                      </Suspense>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n            {!openFormForNew ? (\r\n              <button aria-label=\"add task button\" className=\"add-task-button\" onClick={() => setOpenFormForNew(p => !p)}>\r\n                <AiOutlinePlus size=\"25px\" />\r\n                <p style={{ marginLeft: 10 }}>\r\n                  add task\r\n                </p>\r\n              </button>\r\n            ) : (\r\n              <Suspense fallback={\r\n                <div className=\"loading-container\">\r\n                  <Loading size=\"60\" strokeWidth=\"5\" color={\"#fff\"} backgroud=\"transparent\" />\r\n                </div>\r\n              }>\r\n                <TaskForm setOpen={setOpenFormForNew} oldData={null} isLoading={isLoading} setIsLoading={setIsLoading} setMessage={setMessage} />\r\n              </Suspense>\r\n            )}\r\n          </div>\r\n          {tasks.tasks?.length > 0 && (\r\n            <div className=\"footer-container\">\r\n              <Footer />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Suspense>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Tasks;"],"names":["TaskForm","lazy","Footer","Menu","Task","setMessage","useState","openFormForNew","setOpenFormForNew","tasks","useSelector","state","timer","active","activites","setting","started","dispatch","useDispatch","isLoading","setIsLoading","useEffect","undefined","getTasks","Loading","size","strokeWidth","backgroud","color","Suspense","fallback","className","style","display","focusMode","length","filter","t","check","map","task","index","_id","setOpen","oldData","onClick","p","marginLeft"],"sourceRoot":""}