{"version":3,"file":"static/js/644.3c765297.chunk.js","mappings":"4JAMMA,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IACnBC,GAAcD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACnBE,GAAcF,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IAwFzB,UAtF0B,SAAC,GAAwC,IAAtCG,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC9C,GAKIC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAjB,IAJdC,EADF,EACEA,OACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,QAEIC,EAAeF,EAAQR,KAAKM,GAElC,OACE,iCACE,gBACEK,UAAU,kBACVC,MAAO,CACLC,gBAAgB,mEAAD,OAECb,EAAO,IAAM,GAAK,IAAyB,GAAlBA,EAAO,GAAK,IAAU,GAFhD,qFAICA,EAAO,IAAM,GAAK,QAAUO,EAAUD,GAAQQ,MAJ/C,kFAMEd,EAAO,GAAK,GAAKA,EAAO,IAAM,GAAOA,EAAO,GAAM,EAAI,GAAMA,EAAO,GAAM,GAAK,MAAQ,KANxF,8GAUfe,gBAAiBR,EAAUD,GAAQQ,UAGvC,gBACEH,UAAU,mBACVC,MAAO,CACLC,gBAAgB,mEAAD,OAECb,EAAO,IAAM,GAAK,IAAyB,GAAlBA,EAAO,GAAK,IAAU,GAFhD,qFAICA,EAAO,IAAM,GAAK,QAAUO,EAAUD,GAAQQ,MAJ/C,wGAOEd,EAAO,GAAK,GAAKA,EAAO,IAAM,GAAOA,EAAO,GAAM,EAAI,GAAKA,EAAO,GAAK,GAAK,MAAQ,KAPtF,0CAQCO,EAAUD,GAAQQ,MARnB,qEAHnB,UAgBE,gBAAKH,UAAU,OAAOC,MAAO,CAAEI,cAAe,UAA9C,UACE,8BACGP,GACC,+BACE,SAACV,EAAD,CACEkB,YAAahB,OAIjB,8BACIQ,GAAWT,IAASU,GAAgBJ,IAAWY,EAAAA,IAc/C,+BACE,SAACtB,EAAD,CACEqB,YAAahB,EACbD,KAAMA,EACNmB,UAAW,gBACXR,UAAW,aACXS,GAAI,kBAnBR,iCACE,SAACxB,EAAD,CACEqB,YAAahB,EACbD,KAAMA,EACNmB,UAAW,0BACXR,UAAW,UACXS,GAAI,aAEN,SAACtB,EAAD,CACEuB,YAAanB,iBAqBlC,C","sources":["components/Clock/Analog/Controllers/AnalogControllers.js"],"sourcesContent":["import React, { lazy } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/* some attachments for redux action */\r\nimport { PERIOD } from \"../../../../actions/timer\";\r\n\r\nconst StartButton = lazy(() => import(\"./Roll/StartRoll\"));\r\nconst ClearButton = lazy(() => import(\"./Roll/ClearButton\"));\r\nconst PauseButton = lazy(() => import(\"./Roll/PauseButton\"));\r\n\r\nconst AnalogControllers = ({ time, toggleStart, handleReset }) => {\r\n  const {\r\n    active,\r\n    activites,\r\n    setting,\r\n    started,\r\n  } = useSelector((state) => state.timer);\r\n  const activePeriod = setting.time[active];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"different-color\"\r\n        style={{\r\n          backgroundImage: `\r\n                    linear-gradient(\r\n                        ${time / 60 <= 30 ? 270 : (time / 60 - 30) * 6 + 90}deg, \r\n                        transparent 50%, \r\n                        ${time / 60 <= 30 ? \"white\" : activites[active].color} 50%), \r\n                    linear-gradient(\r\n                        ${(time / 60 > 0 && time / 60 <= 30) ? (time / 60) * 6 + 90 : (time / 60) > 30 ? \"270\" : \"90\"}deg, \r\n                        transparent 50%, \r\n                        white 50%)\r\n                    `,\r\n          backgroundColor: activites[active].color\r\n        }}\r\n      ></div>\r\n      <div\r\n        className=\"roller-container\"\r\n        style={{\r\n          backgroundImage: `\r\n                    linear-gradient(\r\n                        ${time / 60 <= 30 ? 270 : (time / 60 - 30) * 6 + 90}deg, \r\n                        transparent 50%, \r\n                        ${time / 60 <= 30 ? \"white\" : activites[active].color} 50%\r\n                    ), \r\n                    linear-gradient(\r\n                        ${(time / 60 > 0 && time / 60 <= 30) ? (time / 60) * 6 + 90 : time / 60 > 30 ? \"270\" : \"90\"}deg, \r\n                        ${activites[active].color} 50%, \r\n                        white 50%\r\n                    )`\r\n        }}\r\n      >\r\n        <div className=\"roll\" style={{ flexDirection: \"column\" }}>\r\n          <>\r\n            {started ? (\r\n              <>\r\n                <PauseButton\r\n                  handleClick={toggleStart}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!started && time !== activePeriod && active === PERIOD ? (\r\n                  <>\r\n                    <StartButton\r\n                      handleClick={toggleStart}\r\n                      time={time}\r\n                      ariaLabel={\"continue button on roll\"}\r\n                      className={\"up-side\"}\r\n                      id={\"up-side\"}\r\n                    />\r\n                    <ClearButton\r\n                      handleClear={handleReset}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <StartButton\r\n                      handleClick={toggleStart}\r\n                      time={time}\r\n                      ariaLabel={\"start on roll\"}\r\n                      className={\"start-side\"}\r\n                      id={\"start-side\"}\r\n                    />\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AnalogControllers;"],"names":["StartButton","lazy","ClearButton","PauseButton","time","toggleStart","handleReset","useSelector","state","timer","active","activites","setting","started","activePeriod","className","style","backgroundImage","color","backgroundColor","flexDirection","handleClick","PERIOD","ariaLabel","id","handleClear"],"sourceRoot":""}