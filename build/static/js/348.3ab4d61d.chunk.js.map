{"version":3,"file":"static/js/348.3ab4d61d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Tasks/Task/Task.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { lazy, Suspense, useState } from \"react\";\r\n\r\nimport { BsCheckCircleFill } from 'react-icons/bs';\r\n\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport { MdDelete, MdRadioButtonUnchecked } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkTask, deleteTask, CHANGE_ACTIVE_TASK } from \"../../../actions/tasks\";\r\nimport Loading from \"../../../utils/Loading\";\r\nimport Message from \"../../../utils/Message\";\r\n// import Loading from \"../../../Utils/Loading\";\r\n\r\nconst TaskForm = lazy(() => import(\"../TaskForm/TaskForm\"));\r\n\r\nconst Task = ({ isLoading, setIsLoading, ...props }) => {\r\n  const dispatch = useDispatch();\r\n  const { activeId } = useSelector(state => state.tasks);\r\n  const { setting } = useSelector(state => state.timer);\r\n  // const {active, activites} = useSelector(state => state.timer);\r\n  const [message, setMessage] = useState({ type: \"\", message: \"\" });\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleCheck = () => {\r\n    dispatch(checkTask(props._id, setIsLoading, setMessage));\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTask(props._id, setIsLoading, setMessage));\r\n  }\r\n\r\n  const handleActive = () => {\r\n    if ((!props.check && setting.autoStartNextTask) || (!setting.autoStartNextTask && props.act !== props.est)) {\r\n      dispatch({ type: CHANGE_ACTIVE_TASK, data: props });\r\n    }\r\n  }\r\n\r\n  if (openEdit) {\r\n    return (\r\n      <Suspense fallback={<Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />}>\r\n        <TaskForm oldData={props} setOpen={setOpenEdit} isLoading={isLoading} setIsLoading={setIsLoading} />\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        {message.message && (\r\n          <Message message={message.message} type={message.type} setMessage={setMessage} />\r\n        )}\r\n      </>\r\n      <div\r\n        className={`task ${activeId === props._id ? \"active\" : ''}`}\r\n        onClick={handleActive}>\r\n        {isLoading === props._id ? (\r\n          <div className=\"loading-container\">\r\n            <Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow\">\r\n            <div className=\"buttons\">\r\n              {!setting.autoStartNextTask && (\r\n                <button aria-label=\"check button\" onClick={handleCheck}>\r\n                  {props.check ? (\r\n                    <BsCheckCircleFill />\r\n                  ) : (\r\n                    <MdRadioButtonUnchecked />\r\n                  )}\r\n                </button>\r\n              )}\r\n              <button\r\n                aria-label=\"edit button\"\r\n                onClick={() => setOpenEdit(oe => !oe)}\r\n              ><FiEdit3 /></button>\r\n              <button\r\n                aria-label=\"delet button\"\r\n                onClick={handleDelete}\r\n              ><MdDelete /></button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <div className=\"task-inner\">\r\n            <div className=\"icon-container\">\r\n              {props.check ? (\r\n                <BsCheckCircleFill className=\"task-uncheck\" />\r\n              ) : (\r\n                <MdRadioButtonUnchecked className=\"task-check\" />\r\n              )}\r\n            </div>\r\n            <p style={{\r\n              textDecoration: props.check && \"line-through\"\r\n            }}>{props.name}</p>\r\n          </div>\r\n          <p className=\"act-est\">\r\n            <span>{props.act}</span>\r\n            <span style={{\r\n              fontWeight: \"normal\",\r\n              fontSize: \"18px\",\r\n              marginInline: \"4px\"\r\n            }}>/</span>\r\n            <span>{props.est}</span>\r\n          </p>\r\n        </div>\r\n        {props.notes !== '' && (\r\n          <div className=\"task-notes\">\r\n            <p>{props.notes}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Task;"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","TaskForm","lazy","isLoading","setIsLoading","props","dispatch","useDispatch","activeId","useSelector","state","tasks","setting","timer","useState","type","message","setMessage","openEdit","setOpenEdit","Suspense","fallback","Loading","size","strokeWidth","color","oldData","setOpen","Message","className","_id","onClick","check","autoStartNextTask","act","est","CHANGE_ACTIVE_TASK","data","checkTask","oe","deleteTask","style","display","alignItems","width","justifyContent","textDecoration","name","fontWeight","fontSize","marginInline","notes"],"sourceRoot":""}